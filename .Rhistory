relabundance <- relabundance[relabundance$Abundance > 0.01,]
relabundance <- subset(relabundance, select=-c(domain,sample.name))
abundance <- tax_glom(phylo.data, taxrank = "class")
abundance <- tax_glom(phylo.data, taxrank = "class")
caged <- subset_samples(abundance, Treatment!="Bagged")
caged <- prune_taxa(taxa_sums(caged) > 0, caged)
caged.ds <- phyloseq_to_deseq2(caged, ~ Treatment)
bagged <- subset_samples(abundance, Treatment!="Caged")
bagged <- prune_taxa(taxa_sums(bagged) > 0, bagged)
bagged.ds <- phyloseq_to_deseq2(bagged, ~ Treatment)
caged.res <- data.frame(results(DESeq(caged.ds, test="Wald", fitType="parametric"), cooksCutoff=F))
bagged.res <- data.frame(results(DESeq(bagged.ds, test="Wald", fitType="parametric"), cooksCutoff=F))
caged.res.sig <- subset(caged.res, padj < 0.1)
bagged.res.sig <- subset(bagged.res, padj < 0.1)
caged.res.sig <- merge(caged.res.sig, tax_table(phylo.data), by = "row.names")
bagged.res.sig <- merge(bagged.res.sig, tax_table(phylo.data), by = "row.names")
caged.res.sig$pos_neg <- ifelse(caged.res.sig$log2FoldChange > 0, "positive", "negative")
caged.res.sig$treatment <- "caged"
bagged.res.sig$pos_neg <- ifelse(bagged.res.sig$log2FoldChange > 0, "positive", "negative")
bagged.res.sig$treatment <- "bagged"
sig.otus <- rbind(caged.res.sig, bagged.res.sig)
relabundance <- tax_glom(phylo.data, taxrank = "class")
relabundance <- tax_glom(phylo.data, taxrank = "class")
relabundance <- transform_sample_counts(relabundance, function(x){x/sum(x)})
caged <- subset_samples(relabundance, Treatment!="Bagged")
caged <- prune_taxa(taxa_sums(caged) > 0, caged)
caged.ds <- phyloseq_to_deseq2(caged, ~ Treatment)
bagged <- subset_samples(relabundance, Treatment!="Caged")
bagged <- prune_taxa(taxa_sums(bagged) > 0, bagged)
bagged.ds <- phyloseq_to_deseq2(bagged, ~ Treatment)
caged.res <- data.frame(results(DESeq(caged.ds, test="Wald", fitType="parametric"), cooksCutoff=F))
bagged.res.sig$treatment <- "bagged"
relabundance <- tax_glom(phylo.data, taxrank = "class")
relabundance <- transform_sample_counts(relabundance, function(x){x/sum(x)})
caged <- subset_samples(relabundance, Treatment!="Bagged")
caged.res <- data.frame(results(DESeq(caged.ds, test="Wald", fitType="parametric"), cooksCutoff=F))
relabundance <- tax_glom(phylo.data, taxrank = "class")
relabundance <- tax_glom(phylo.data, taxrank = "class")
relabundance <- transform_sample_counts(relabundance, function(x){x/sum(x)})
caged <- subset_samples(relabundance, Treatment!="Bagged")
caged.ds <- phyloseq_to_deseq2(caged, ~ Treatment)
test <- otu_table(caged)
test
colSums(test)
dim(test)
test[test > 0] <- 1
colSums(test)
caged <- subset_samples(relabundance, Treatment!="Bagged")
caged <- prune_taxa(taxa_sums(caged) > 0, caged)
test <- otu_table(caged)
test
abundance <- tax_glom(phylo.data, taxrank = "class")
abundance <- tax_glom(phylo.data, taxrank = "class")
caged <- subset_samples(abundance, Treatment!="Bagged")
caged <- prune_taxa(taxa_sums(caged) > 0, caged)
caged <- transform_sample_counts(caged, function(x){x/sum(x)})
caged <- transform_sample_counts(caged, function(x){x/sum(x)})
caged.ds <- phyloseq_to_deseq2(caged, ~ Treatment)
bagged <- subset_samples(abundance, Treatment!="Caged")
bagged <- prune_taxa(taxa_sums(bagged) > 0, bagged)
bagged <- transform_sample_counts(bagged, function(x){x/sum(x)})
bagged.ds <- phyloseq_to_deseq2(bagged, ~ Treatment)
caged.res <- data.frame(results(DESeq(caged.ds, test="Wald", fitType="parametric"), cooksCutoff=F))
abundance <- tax_glom(phylo.data, taxrank = "class")
caged <- subset_samples(abundance, Treatment!="Bagged")
caged <- prune_taxa(taxa_sums(caged) > 0, caged)
# caged <- transform_sample_counts(caged, function(x){x/sum(x)})
caged.ds <- phyloseq_to_deseq2(caged, ~ Treatment)
bagged <- subset_samples(abundance, Treatment!="Caged")
bagged <- prune_taxa(taxa_sums(bagged) > 0, bagged)
# bagged <- transform_sample_counts(bagged, function(x){x/sum(x)})
bagged.ds <- phyloseq_to_deseq2(bagged, ~ Treatment)
caged.res <- data.frame(results(DESeq(caged.ds, test="Wald", fitType="parametric"), cooksCutoff=F))
abundance <- tax_glom(phylo.data, taxrank = "class")
abundance <- tax_glom(phylo.data, taxrank = "class")
caged <- subset_samples(abundance, Treatment!="Bagged")
caged <- prune_taxa(taxa_sums(caged) > 0, caged)
# caged <- transform_sample_counts(caged, function(x){x/sum(x)})
caged.ds <- phyloseq_to_deseq2(caged, ~ Treatment)
# caged <- transform_sample_counts(caged, function(x){x/sum(x)})
caged.ds <- phyloseq_to_deseq2(caged, ~ Treatment)
bagged <- subset_samples(abundance, Treatment!="Caged")
bagged <- prune_taxa(taxa_sums(bagged) > 0, bagged)
# bagged <- transform_sample_counts(bagged, function(x){x/sum(x)})
bagged.ds <- phyloseq_to_deseq2(bagged, ~ Treatment)
caged.res <- data.frame(results(DESeq(caged.ds, test="Wald", fitType="parametric"), cooksCutoff=F))
bagged.res <- data.frame(results(DESeq(bagged.ds, test="Wald", fitType="parametric"), cooksCutoff=F))
caged.res.sig <- subset(caged.res, padj < 0.1)
bagged.res.sig <- subset(bagged.res, padj < 0.1)
caged.res.sig <- merge(caged.res.sig, tax_table(phylo.data), by = "row.names")
bagged.res.sig <- merge(bagged.res.sig, tax_table(phylo.data), by = "row.names")
caged.res.sig$pos_neg <- ifelse(caged.res.sig$log2FoldChange > 0, "positive", "negative")
caged.res.sig$treatment <- "caged"
bagged.res.sig$pos_neg <- ifelse(bagged.res.sig$log2FoldChange > 0, "positive", "negative")
bagged.res.sig$treatment <- "bagged"
sig.otus <- rbind(caged.res.sig, bagged.res.sig)
p <- ggplot(data=sig.otus, aes(x=class, y=log2FoldChange))
p <- p + geom_point(aes(color=treatment))
p <- p + theme_bw()
p <- p + geom_hline(yintercept=0)
p <- p + xlab("Class") + ylab("Differences in Abundance (log2)")
p <- p + theme(axis.title.x = element_blank())
p
caged <- transform_sample_counts(caged, function(x){x/sum(x)})
bagged <- transform_sample_counts(bagged, function(x){x/sum(x)})
caged.ds <- phyloseq_to_deseq2(caged, ~ Treatment)
bagged.ds <- phyloseq_to_deseq2(bagged, ~ Treatment)
caged.res <- data.frame(results(DESeq(caged.ds, test="Wald", fitType="parametric"), cooksCutoff=F))
bagged.res <- data.frame(results(DESeq(bagged.ds, test="Wald", fitType="parametric"), cooksCutoff=F))
caged.res <- data.frame(results(DESeq(caged.ds, test="Wald", fitType="parametric"), cooksCutoff=F))
relabundance <- tax_glom(phylo.data, taxrank = "phylum")
relabundance <- transform_sample_counts(relabundance, function(x){x/sum(x)})
relabundance_table <- psmelt(relabundance)
relabundance_table <- relabundance_table[relabundance_table$Abundance > 0.01,]
relabundance_table <- subset(relabundance_table, select=-c(domain,sample.name))
p <- ggplot(relabundance_table, aes(x = as.factor(Sample), y = Abundance, fill = phylum))
p <- p + geom_bar(stat = "identity", width = 0.5)
p <- p + theme_bw()
p <- p + theme(legend.key.size = unit(0.5,"line"))
p <- p + ylab("Relative Abundance (Phylum > 1%) \n")
p
p <- ggplot(relabundance_table, aes(x = as.factor(Sample), y = Abundance, fill = phylum))
p <- p + geom_bar(stat = "identity", width = 0.5)
p <- p + facet_grid(. ~ Treatment, space = "free", scales = "free")
p <- p + theme_bw()
p <- p + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
p <- p + theme(legend.key.size = unit(0.5,"line"))
p <- p + guides(fill=guide_legend(ncol=1))
p <- p + ylab("Relative Abundance (Phylum > 1%) \n")
p
caged <- subset_samples(relabundance, Treatment!="Bagged")
caged <- prune_taxa(taxa_sums(caged) > 0, caged)
caged.ds <- phyloseq_to_deseq2(caged, ~ Treatment)
bagged <- subset_samples(relabundance, Treatment!="Caged")
bagged <- prune_taxa(taxa_sums(bagged) > 0, bagged)
bagged.ds <- phyloseq_to_deseq2(bagged, ~ Treatment)
caged.res <- data.frame(results(DESeq(caged.ds, test="Wald", fitType="parametric"), cooksCutoff=F))
bagged.res <- data.frame(results(DESeq(bagged.ds, test="Wald", fitType="parametric"), cooksCutoff=F))
rela.dist = phyloseq::distance(relabundance, "bray")
adonis(rela.dist ~ Culture.media + Variable + as.factor(Replicate), perm=9999,as(sample_data(data.mintax5.excluded.rela.phy), "data.frame"))
sample_data(relabundance)
adonis(rela.dist ~ Treatment + as.factor(Flower), perm=9999,as(sample_data(relabundance), "data.frame"))
si<-data.frame(sample_data(relabundance))
pairs <- t(combn(unique(si$Variable), 2))
si
pairs <- t(combn(unique(si$Treatment), 2))
# 4. use a for loop:
df <- data.frame() #start an empty data.frame
for (i in 1:nrow(pairs)){
temp.rowname <- paste(pairs[i, 1], pairs[i, 2], sep="::")
temp.phy <- subset_samples(data.mintax5.excluded.rela.phy, Variable %in% pairs[i, ])
temp.phy <- prune_taxa(taxa_sums(temp.phy) > 0, temp.phy)
temp.dist <- phyloseq::distance(temp.phy, "bray")
temp.result <- adonis(temp.dist ~ Variable, perm=9999, as(sample_data(temp.phy), "data.frame"))
temp.df <- data.frame(temp.rowname, temp.result$aov.tab[4][1, ], temp.result$aov.tab[5][1, ], temp.result$aov.tab[6][1, ])
df <- rbind(df, temp.df)
}
for (i in 1:nrow(pairs)){
temp.rowname <- paste(pairs[i, 1], pairs[i, 2], sep="::")
temp.phy <- subset_samples(data.mintax5.excluded.rela.phy, Treatment %in% pairs[i, ])
temp.phy <- prune_taxa(taxa_sums(temp.phy) > 0, temp.phy)
temp.dist <- phyloseq::distance(temp.phy, "bray")
temp.result <- adonis(temp.dist ~ Treatment, perm=9999, as(sample_data(temp.phy), "data.frame"))
temp.df <- data.frame(temp.rowname, temp.result$aov.tab[4][1, ], temp.result$aov.tab[5][1, ], temp.result$aov.tab[6][1, ])
df <- rbind(df, temp.df)
}
for (i in 1:nrow(pairs)){
temp.rowname <- paste(pairs[i, 1], pairs[i, 2], sep="::")
temp.phy <- subset_samples(relabundance, Treatment %in% pairs[i, ])
temp.phy <- prune_taxa(taxa_sums(temp.phy) > 0, temp.phy)
temp.dist <- phyloseq::distance(temp.phy, "bray")
temp.result <- adonis(temp.dist ~ Treatment, perm=9999, as(sample_data(temp.phy), "data.frame"))
temp.df <- data.frame(temp.rowname, temp.result$aov.tab[4][1, ], temp.result$aov.tab[5][1, ], temp.result$aov.tab[6][1, ])
df <- rbind(df, temp.df)
}
names(df)<-c("factor", "rela.F.model", "rela.adonis_R2", "rela.Pr(>F)")
df
abundance <- tax_glom(phylo.data, taxrank = "class")
abundance <- tax_glom(phylo.data, taxrank = "class")
caged <- subset_samples(relabundance, Treatment!="Bagged")
caged <- prune_taxa(taxa_sums(caged) > 0, caged)
# caged <- transform_sample_counts(caged, function(x){x/sum(x)})
caged.ds <- phyloseq_to_deseq2(caged, ~ Treatment)
bagged <- subset_samples(relabundance, Treatment!="Caged")
bagged <- prune_taxa(taxa_sums(bagged) > 0, bagged)
# bagged <- transform_sample_counts(bagged, function(x){x/sum(x)})
bagged.ds <- phyloseq_to_deseq2(bagged, ~ Treatment)
caged.res <- data.frame(results(DESeq(caged.ds, test="Wald", fitType="parametric"), cooksCutoff=F))
bagged.res <- data.frame(results(DESeq(bagged.ds, test="Wald", fitType="parametric"), cooksCutoff=F))
abundance <- tax_glom(phylo.data, taxrank = "class")
abundance <- tax_glom(phylo.data, taxrank = "class")
caged <- subset_samples(abundance, Treatment!="Bagged")
caged <- prune_taxa(taxa_sums(caged) > 0, caged)
# caged <- transform_sample_counts(caged, function(x){x/sum(x)})
caged.ds <- phyloseq_to_deseq2(caged, ~ Treatment)
bagged <- subset_samples(abundance, Treatment!="Caged")
bagged <- prune_taxa(taxa_sums(bagged) > 0, bagged)
# bagged <- transform_sample_counts(bagged, function(x){x/sum(x)})
bagged.ds <- phyloseq_to_deseq2(bagged, ~ Treatment)
caged.res <- data.frame(results(DESeq(caged.ds, test="Wald", fitType="parametric"), cooksCutoff=F))
caged.res <- data.frame(results(DESeq(caged.ds, test="Wald", fitType="parametric"), cooksCutoff=F))
bagged.res <- data.frame(results(DESeq(bagged.ds, test="Wald", fitType="parametric"), cooksCutoff=F))
caged.res.sig <- subset(caged.res, padj < 0.1)
bagged.res.sig <- subset(bagged.res, padj < 0.1)
bagged.res.sig <- subset(bagged.res, padj < 0.1)
caged.res.sig <- merge(caged.res.sig, tax_table(phylo.data), by = "row.names")
bagged.res.sig <- merge(bagged.res.sig, tax_table(phylo.data), by = "row.names")
caged.res.sig$pos_neg <- ifelse(caged.res.sig$log2FoldChange > 0, "positive", "negative")
caged.res.sig$treatment <- "caged"
bagged.res.sig$pos_neg <- ifelse(bagged.res.sig$log2FoldChange > 0, "positive", "negative")
bagged.res.sig$treatment <- "bagged"
sig.otus <- rbind(caged.res.sig, bagged.res.sig)
anova(lm(relabundance$Abundance ~ relabundance$Treatment))
anova(lm(psmelt(relabundance)$Abundance ~ psmelt(relabundance)$Treatment))
TukeyHSD(aov(psmelt(relabundance)$Abundance$Abundance ~ psmelt(relabundance)$Abundance$Treatment))
TukeyHSD(aov(psmelt(relabundance)$Abundance ~ psmelt(relabundance)$Treatment))
?prune_species
richness.data <- plot_richness(phylo.data, measures = "Shannon")
richness <- plot_richness(phylo.data, measures = "Shannon")
richness
richness.df <- richness$data
richness <- plot_richness(phylo.data, measures = "Shannon")$data
richness
p <- ggplot(richness, aes(x = samples, y = value), color = Treatment)
p
p <- p + geom_boxplot(aes(color = treatment), position = "dodge")
p <- p + facet_grid(~treatment)
p
p <- ggplot(richness, aes(x = samples, y = value), color = Treatment)
p <- p + geom_boxplot(aes(color = Treatment), position = "dodge")
p <- p + facet_grid(~ Treatment)
p
p
p <- ggplot(richness, aes(x = samples, y = value), color = Treatment)
p <- p + geom_boxplot(aes(color = samples), position = "dodge")
p <- p + facet_grid(~ Treatment)
p
head(richness)
p <- ggplot(richness, aes(x = samples, y = value), color = Treatment)
p <- p + geom_boxplot(aes(color = Treatment), position = "dodge")
p <- p + facet_grid(~ Treatment)
p
p <- ggplot(richness, aes(x = Treatment, y = value), color = Treatment)
p <- p + geom_boxplot(aes(color = Treatment), position = "dodge")
p <- p + facet_grid(~ Treatment)
p
p <- ggplot(richness, aes(x = Treatment, y = value), color = Treatment)
p <- p + geom_boxplot(aes(color = Treatment), position = "dodge")
p
richness <- plot_richness(phylo.data, measures = "Shannon")$data
p <- ggplot(richness, aes(x = Treatment, y = value), color = Treatment)
p <- p + geom_boxplot(aes(color = Treatment), position = "dodge")
p <- p + labs(title = "Alpha-Diversity", x = "", y = "Shannon Richness")
p
p <- p + theme(legend.position="none")
p
p <- p + ggtitle("Default in 2.2.0 is left-aligned")
p
richness <- plot_richness(phylo.data, measures = "Shannon")$data
p <- ggplot(richness, aes(x = Treatment, y = value), color = Treatment)
p <- p + geom_boxplot(aes(color = Treatment), position = "dodge")
p <- p + ggtitle("Default in 2.2.0 is left-aligned")
p <- p + theme(plot.title = element_text(hjust = 0.5))
p
p <- p + theme(legend.position="none")
p
richness <- plot_richness(phylo.data, measures = "Shannon")$data
p <- ggplot(richness, aes(x = Treatment, y = value), color = Treatment)
p <- p + geom_boxplot(aes(color = Treatment), position = "dodge")
p <- p + ggtitle("Alpha-Diversity of Treatments")
p <- p + theme(plot.title = element_text(hjust = 0.5))
p <- p + theme(legend.position="none")
p
richness <- plot_richness(phylo.data, measures = "Shannon")$data
p <- ggplot(richness, aes(x = Treatment, y = value), color = Treatment)
p <- p + geom_boxplot(aes(color = Treatment), position = "dodge")
p <- p + ggtitle("Alpha-Diversity of Treatments")
p <- p + theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
axis.text.y = "test",
legend.position="none")
richness <- plot_richness(phylo.data, measures = "Shannon")$data
p <- ggplot(richness, aes(x = Treatment, y = value), color = Treatment)
p <- p + geom_boxplot(aes(color = Treatment), position = "dodge")
p <- p + ylab("Shannon Alpha-Diversity")
p <- p + theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
legend.position="none")
p
p <- p + ggtitle("Alpha-Diversity of Treatments")
p
richness <- plot_richness(phylo.data, measures = "Shannon")$data
p <- ggplot(richness, aes(x = Treatment, y = value), color = Treatment)
p <- p + geom_boxplot(aes(color = Treatment), position = "dodge")
p <- p + ggtitle("Alpha-Diversity of Treatments")
p <- p + ylab("Shannon Alpha-Diversity")
p <- p + theme(plot.title = element_text(hjust = 0.5),
axis.title.x = element_blank(),
legend.position="none")
p
relative_abundance <- function(physeq, n) {
physeq.scale <- transform_sample_counts(physeq, function(x){(n * x/sum(x))})
otu_table(physeq.scale) <- floor(otu_table(physeq.scale))
physeq.scale <- prune_taxa(taxa_sums(physeq.scale) > 0, physeq.scale)
return(physeq.scale)
}
relative_abundance <- function(physeq) {
physeq.scale <- transform_sample_counts(physeq, function(x){(x/sum(x))})
otu_table(physeq.scale) <- floor(otu_table(physeq.scale))
physeq.scale <- prune_taxa(taxa_sums(physeq.scale) > 0, physeq.scale)
return(physeq.scale)
}
relabundance <- tax_glom(phylo.data, taxrank = "phylum")
relabundance <- tax_glom(phylo.data, taxrank = "phylum")
relabundance <- relative_abundance(relabundance)
relabundance <- relative_abundance(tax_glom(phylo.data, taxrank = "phylum"))
physeq <- tax_glom(phylo.data, taxrank = "phylum")
physeq.scale <- transform_sample_counts(physeq, function(x){(x/sum(x))})
otu_table(physeq.scale)
floor(otu_table(physeq.scale))
phylo <- readRDS("Dropbox/jrbp.community.analysis/rare_b.rds")
tax_table(phylo)
lacto <- prune_taxa(phylo, Genus = "Lactobacillus")
subset_taxa(phylo, Genus == "Lactobacillus")
lacto <- subset_taxa(phylo, Genus == "Lactobacillus")
subset_taxa(phylo, Genus == "kunkeei")
subset_taxa(phylo, Species == "kunkeei")
otu_table(lacto)
otu_table(lacto)
subset_samples(lacto, sample_sums(x) > 1)
subset_samples(lacto, sample_sums(lacto) > 1)
lacro <- subset_samples(lacto, sample_sums(lacto) > 1)
otu_table()
otu_table(lacto)
lacro <- subset_samples(lacto, sample_sums(lacto) > 1)
otu_table(lacto)
subset_samples(lacto, sample_sums(lacto) > 1)
otu_table(lacro)
lacto <- subset_samples(lacto, sample_sums(lacto) > 1)
otu_table(lacto)
sink("Lacto_OTUs.txt", append=FALSE, split=FALSE)
otu_table(lacto)
sample_data(lacto)
sample_data(lacto)
lacto
otu_table(lacto)
dev.off()
sink("Lacto_OTUs.txt", append=FALSE, split=FALSE)
otu_table(lacto)
sink()
sample_data(lacto)
otu_table(lacto)
sink()
otu_table(lacto)
sample_data(lacto)
tax_table(lacto)
lacto <- subset_taxa(phylo, Order == "Lactobacillales")
lacto
lacto <- subset_samples(lacto, sample_sums(lacto) > 1)
lacto
otu_table(lacto)
sink("Lacto_OTUs_order.txt", append=FALSE, split=FALSE)
otu_table(lacto)
sink()
tax_table(lacto)
sink("Lacto_OTUs_taxonomy.txt", append=FALSE, split=FALSE)
tax_table(lacto)
sink()
otu_table(phylo)
colSums(otu_table(phylo))
length(colSums(otu_table(phylo))_
length(colSums(otu_table(phylo))
)
otu_table(lacto)
lacto <- subset_taxa(phylo, Genus == "Lactobacillus")
lacto <- subset_samples(lacto, sample_sums(lacto) > 1)
lacto
otu_table(lacto)
saveRDS(lacto, "Lactobacillus.Rds")
phylo <- readRDS("Dropbox/jrbp.community.analysis/rare_b.rds")
library(phyloseq)
lacto <- subset_samples(phylo, sample_sums(phylo) > 1)
phylo <- readRDS("Dropbox/jrbp.community.analysis/rare_b.rds")
lacto <- subset_samples(phylo, sample_sums(phylo) > 1)
sample_sums(phylo)
lacto <- subset_taxa(phylo, Genus == "Lactobacillus")
lacto <- subset_samples(phylo, sample_sums(phylo) > 1)
lacto
lacto <- subset_samples(phylo, sample_sums(lacto) > 1)
sample_data(lacto)
exposed <- subset_samples(lacto, Treatment == "Exposed")
exposed
bagged <- subset_samples(lacto, Treatment == "Bagged")
caged <- subset_samples(lacto, Treatment == "Caged")
hb <- subset_samples(lacto, Treatment == "Bird")
hb
transform_sample_counts(lacto, function(x){(n * x/sum(x))})
transform_sample_counts(lacto, function(x){(x/sum(x))})
lacto <- transform_sample_counts(lacto, function(x){(x/sum(x))})
lacto <- subset_taxa(phylo, Genus == "Lactobacillus")
lacto <- subset_samples(phylo, sample_sums(lacto) > 1)
lacto <- transform_sample_counts(lacto, function(x){(x/500})
lacto <- transform_sample_counts(lacto, function(x){x/500})
otu_table(lacto)
relabundance_table <- psmelt(lacto)
relabundance_table
colnames(relabundance_table)
lacto <- subset_taxa(phylo, Genus == "Lactobacillus")
lacto
lacto <- subset_samples(phylo, sample_sums(lacto) > 1)
lacto
lacto <- subset_taxa(phylo, Genus == "Lactobacillus")
lacto
lacto <- subset_samples(lacto, sample_sums(lacto) > 1)
lacto
lacto <- transform_sample_counts(lacto, function(x){x/500})
relabundance_table <- psmelt(lacto)
relabundance_table
ggplot(relabundance_table, aes(x = as.factor(Sample), y = Abundance, fill = OTU))
library(ggplot2)
ggplot(relabundance_table, aes(x = as.factor(Sample), y = Abundance, fill = OTU))
+ geom_bar(stat = "identity", width = 0.5)
p <- ggplot(relabundance_table, aes(x = as.factor(Sample), y = Abundance, fill = OTU))
p <- p + geom_bar(stat = "identity", width = 0.5)
p
p <- p + facet_grid(. ~ Treatment, space = "free", scales = "free")
p <- p + theme_bw()
p
p <- p + theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())
p <- p + theme(legend.key.size = unit(0.5,"line"))
p <- p + guides(fill=guide_legend(ncol=1))
p
p <- ggplot(relabundance_table, aes(x = as.factor(Sample), y = Abundance, fill = OTU))
p <- p + geom_bar(stat = "identity", width = 0.5)
p <- p + facet_grid(. ~ Treatment, space = "free", scales = "free")
p <- p + theme_bw()
p <- p + theme(legend.key.size = unit(0.5,"line"))
p <- p + guides(fill=guide_legend(ncol=1))
p
p <- ggplot(relabundance_table, aes(x = as.factor(Sample), y = Abundance, fill = OTU))
p <- p + geom_bar(stat = "identity", width = 0.5)
p <- p + facet_grid(. ~ Treatment, space = "free", scales = "free")
p <- p + theme_bw()
p <- p + theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle = 90, hjust = 1))
axis.ticks.x=element_blank())
p <- p + theme(legend.key.size = unit(0.5,"line"))
p <- p + guides(fill=guide_legend(ncol=1))
p
p <- p + theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle = 45, hjust = 1))
p
p <- ggplot(relabundance_table, aes(x = as.factor(Sample), y = Abundance, fill = OTU))
p <- p + geom_bar(stat = "identity", width = 0.5)
p <- p + facet_grid(. ~ Treatment, space = "free", scales = "free")
p <- p + theme_bw()
p <- p + ylab("Relative Abundance")
p <- p + theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle = 45, hjust = 1))
axis.ticks.x=element_blank())
p <- p + theme(legend.key.size = unit(0.5,"line"))
p <- p + guides(fill=guide_legend(ncol=1))
p
ggsave("Desktop/Lacto/relative_abundance_plot.png")
colnames(relabundance_table)
p <- ggplot(relabundance_table, aes(x = as.factor(Sample), y = Abundance, fill = OTU))
p <- p + geom_bar(stat = "identity", width = 0.5)
p <- p + facet_grid(. ~ month, space = "free", scales = "free")
p <- p + theme_bw()
p <- p + ylab("Relative Abundance")
p <- p + theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle = 45, hjust = 1))
axis.ticks.x=element_blank())
p <- p + theme(legend.key.size = unit(0.5,"line"))
p <- p + guides(fill=guide_legend(ncol=1))
p
p <- ggplot(relabundance_table, aes(x = as.factor(Sample), y = Abundance, fill = Experiment))
p <- p + geom_bar(stat = "identity", width = 0.5)
p <- p + facet_grid(. ~ month, space = "free", scales = "free")
p <- p + theme_bw()
p <- p + ylab("Relative Abundance")
p <- p + theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle = 45, hjust = 1))
axis.ticks.x=element_blank())
p <- p + theme(legend.key.size = unit(0.5,"line"))
p <- p + guides(fill=guide_legend(ncol=1))
p
p <- ggplot(relabundance_table, aes(x = as.factor(Sample), y = Abundance, fill = Treatment))
p <- p + geom_bar(stat = "identity", width = 0.5)
p <- p + facet_grid(. ~ month, space = "free", scales = "free")
p <- p + theme_bw()
p <- p + ylab("Relative Abundance")
p <- p + theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle = 45, hjust = 1))
axis.ticks.x=element_blank())
p <- p + theme(legend.key.size = unit(0.5,"line"))
p <- p + guides(fill=guide_legend(ncol=1))
p
ggsave("Desktop/Lacto/relative_abundance_plot_bymonth.png")
setwd("Desktop/16S_amplicon_pipeline/")
rmarkdown::render_site()
setwd("../16S_amplicon_pipeline/")
ls
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
setwd("Desktop/16S_amplicon_pipeline/")
rmarkdown::render_site()

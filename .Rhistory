set.seed(1390)
knitr::opts_chunk$set(echo = TRUE)
library(phyloseq, warn.conflicts = FALSE)
otus <- read.table("data/bacteria/germs_otus/bac_cdhit_otu_table_wide.txt", header=TRUE)
rownames(otus) <- otus$OTUS
otus <- otus[,-1]
?read.table
otus <- read.table("data/bacteria/germs_otus/bac_cdhit_otu_table_wide.txt", header=TRUE, row.names=1)
otu[1:5,1:5]
otus[1:5,1:5]
tax <- read.delim("data/bacteria/germs_otus/bac_cdhit_taxa_table_w_repseq.txt", row.names=2)[,-c(1,2)]
tax[1:5,1:5]
si <- read.csv("data/bacteria/Data_for_bacterial_OTUs.csv")
head(si)
si <- read.csv("data/bacteria/Data_for_bacterial_OTUs.csv")[,-1]
colnames(si) <- c("Flower", "Treatment", "sample.name")
rownames(si) <- paste("X", si$Flower, sep="")
head(si)
library(rmarkdown)
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
rmarkdown::render_site()
set.seed(1390)
knitr::opts_chunk$set(echo = TRUE)
library(phyloseq, warn.conflicts = FALSE)
bacteria_otus <- read.table("data/bacteria/Bacterial_OTU_table.csv", header = TRUE, sep = ",");
bacteria_otus
colnames(bacteria_otus)[1] <- "OTUS"
bacteria_otus
tax_bac <- read.delim("data/bacteria/bacteria_classified_otus",sep = " ", header = TRUE)
tax_bac
tax_bac <- read.delim("data/bacteria/bacteria_classified_otus",sep = " ", header = TRUE, row.names=1)
head(tax_bac)
colnames(tax_bac) <- colnames(tax_bac)[-1]
tax_bac <- tax_bac[,-7]
head(tax_bac)
bacteria_phylo <- phyloseq(otu_table(as.matrix(bacteria_otus), taxa_are_rows=T), tax_table(as.matrix(tax_bac)), sample_data(si))
bacteria_otus
bacteria_phylo <- phyloseq(otu_table(as.matrix(bacteria_otus), taxa_are_rows=T), tax_table(as.matrix(tax_bac)), sample_data(si))
bacteria_otus
bacteria_otus <- read.table("data/bacteria/Bacterial_OTU_table.csv", header = TRUE, sep = ",", row.names=1)
head(bacteria_otus)
otu_table(head(bacteria_otus))
bacteria_phylo <- phyloseq(otu_table(as.matrix(bacteria_otus), taxa_are_rows=T), tax_table(as.matrix(tax_bac)), sample_data(si))
si <- read.csv("data/bacteria/Data_for_bacterial_OTUs.csv")[,-1]
colnames(si) <- c("Flower", "Treatment", "sample.name")
rownames(si) <- paste("X", si$Flower, sep="")
si <- si[,-1]
bacteria_phylo <- phyloseq(otu_table(as.matrix(bacteria_otus), taxa_are_rows=T), tax_table(as.matrix(tax_bac)), sample_data(si))
trt <- as.character(sample_data(bacteria_phylo)$Treatment)
f_table <- cbind(trt, t(otu_table(bacteria_phylo)))
set.seed(1390)
knitr::opts_chunk$set(echo = TRUE)
library(phyloseq, warn.conflicts = FALSE)
library(biomformat, warn.conflicts = FALSE)
bacteria_otus <- read_biom("../data/bacteria/otus_table_full.biom")
?read_biom
bacteria_otus <- as.data.frame(as.matrix(biom_data(read_biom("../data/bacteria/otus_table_full.biom"))))
bacteria_otus
si <- read.csv("../data/bacteria/Data_for_bacterial_OTUs.csv")[,-1]
colnames(si) <- c("Flower", "Treatment", "sample.name")
rownames(si) <- paste("X", si$Flower, sep="")
si <- si[,-1]
tax_bac <- read.delim("../data/bacteria/bacteria_classified_otus",sep = " ", header = TRUE, row.names=1)
colnames(tax_bac) <- colnames(tax_bac)[-1]
tax_bac <- tax_bac[,-7]
colnames(tax_bac) <- colnames(tax_bac)[-1]
tax_bac <- tax_bac[,-7]
bacteria_phylo <- phyloseq(otu_table(as.matrix(bacteria_otus), taxa_are_rows=T), tax_table(as.matrix(tax_bac)), sample_data(si))
bacteria_phylo
sample_data(bacteria_phylo)
trt <- as.character(sample_data(bacteria_phylo)$Treatment)
f_table <- cbind(trt, t(otu_table(bacteria_phylo)))
bacteria_otus
colSums(bacteria_otus)
?filterfun_sample()
mean(colSums(bacteria_otus))
quantile(colSums(bacteria_otus))
colSums(bacteria_otus) >= 1000
sum(colSums(bacteria_otus) >= 1000)
sum(colSums(bacteria_otus) >= 1)
quantile(colSums(bacteria_otus))
quantile
?quantile
sum(colSums(bacteria_otus) < 1000)
sum(colSums(bacteria_otus) < 1000)/328
ncol(bacteria_otus)
sum(colSums(bacteria_otus) < 1000)/ ncol(bacteria_otus)
apply(bacteria_otus,1,sum)
apply(bacteria_otus,1,min)
apply(bacteria_otus,1,max)
quantile(apply(bacteria_otus,1,mean))
quantile(colSums(bacteria_otus))
sum(colSums(bacteria_otus) < 1000)/ ncol(bacteria_otus)
bacteria_otus[colSums(bacteria_otus) < 1000,]
bacteria_otus[colSums(,bacteria_otus) < 1000]
bacteria_otus[,colSums(bacteria_otus) < 1000]
bacteria_otus
bacteria_otus
bacteria_otus <- bacteria_otus[,colSums(bacteria_otus) < 1000]
colSums(bacteria_otus)
bacteria_otus <- as.data.frame(as.matrix(biom_data(read_biom("../data/bacteria/otus_table_full.biom"))))
sum(colSums(bacteria_otus) < 1000)/ ncol(bacteria_otus)
bacteria_otus <- bacteria_otus[,colSums(bacteria_otus) < 1000]
colSums(bacteria_otus)
bacteria_otus <- as.data.frame(as.matrix(biom_data(read_biom("../data/bacteria/otus_table_full.biom"))))
bacteria_otus <- as.data.frame(as.matrix(biom_data(read_biom("../data/bacteria/otus_table_full.biom"))))
bacteria_otus <- as.data.frame(as.matrix(biom_data(read_biom("../data/bacteria/otus_table_full.biom"))))
bacteria_otus <- as.data.frame(as.matrix(biom_data(read_biom("../data/bacteria/otus_table_full.biom"))))
sum(colSums(bacteria_otus) < 1000)/ ncol(bacteria_otus)
sum(bacteria_otus[,colSums(bacteria_otus) < 1000])
bacteria_otus[,colSums(bacteria_otus) < 1000]
colSums(bacteria_otus) < 1000
bacteria_otus <- as.data.frame(as.matrix(biom_data(read_biom("../data/bacteria/otus_table_full.biom"))))
sum(bacteria_otus[,colSums(bacteria_otus) < 1000])
bacteria_otus <- as.data.frame(as.matrix(biom_data(read_biom("../data/bacteria/otus_table_full.biom"))))
bacteria_otus <- bacteria_otus[,colSums(bacteria_otus) >= 1000]
sum(colSums(bacteria_otus) < 1000)/ ncol(bacteria_otus)
sum(colSums(bacteria_otus) < 1000)/ ncol(bacteria_otus)
bacteria_phylo <- phyloseq(otu_table(as.matrix(bacteria_otus), taxa_are_rows=T), tax_table(as.matrix(tax_bac)), sample_data(si))
bacteria_phylo
saveRDS(bacteria_phylo, "../data/bacteria/bacteria_phyloseq.RDS")
trt <- as.character(sample_data(bacteria_phylo)$Treatment)
f_table <- cbind(trt, t(otu_table(bacteria_phylo)))
library(ape)
read.nexus("../schuyler/Downloads/rep_set_tree.tre")
set.seed(1390)
knitr::opts_chunk$set(echo = TRUE)
fungi_otus <- read.table("../data/yeast/fun_cdhit_otu_table_wide.txt", header = TRUE, row.names = 1)[,-1]
fungi_otus
fungi_otus <- read.table("../data/yeast/fun_cdhit_otu_table_wide.txt", header = TRUE, row.names = 1)
fungi_otus
quantile(colSums(fungi_otus))
sum(colSums(fungi_otus) < 1000)/ ncol(fungi_otus)
bacteria_otus <- bacteria_otus[,colSums(bacteria_otus) >= 1000]
fungi_otus <- read.table("../data/yeast/fun_cdhit_otu_table_wide.txt", header = TRUE, row.names = 1)
quantile(colSums(fungi_otus))
sum(colSums(fungi_otus) < 1000)/ ncol(fungi_otus)
fungi_otus <- fungi_otus[,colSums(fungi_otus) >= 1000]
fungi_otus <- read.table("../data/yeast/fun_cdhit_otu_table_wide.txt", header = TRUE, row.names = 1)
quantile(colSums(fungi_otus))
sum(colSums(fungi_otus) < 1000)/ ncol(fungi_otus)
fungi_otus <- fungi_otus[,colSums(fungi_otus) >= 1000]
si <- read.csv("../data/yeast/merged_2012_JRBP_all.csv")"
si <- read.csv("../data/yeast/merged_2012_JRBP_all.csv")
si
si <- read.csv("../data/yeast/merged_2012_JRBP_all.csv", header = TRUE, row.names = 1)
si
si <- read.csv("../data/yeast/merged_2012_JRBP_all.csv", header = TRUE, row.names = 2)[,-1]
si
si <- read.csv("../data/yeast/merged_2012_JRBP_all.csv", header = TRUE, row.names = 2)
si
rownames(si) <- paste("X", rownames(si), sep="")
rownames(si)
si <- read.csv("../data/yeast/merged_2012_JRBP_all.csv", header = TRUE, row.names = 2)[,c("Treatment","Flower.ID.Fungi")]
colnames(si)
colnames(si) == "Treatment"
colnames(si) == c("Treatment","Flower.ID.Fungi")
colnames(si) == c("Treatment","Flower.ID.Fungi.M")
colnames(si) == c("Treatment","Flower.ID")
colnames(si) == c("Treatment","Plant.ID")
colnames(si) == c("Treatment","Flower.ID.Fungi.M")
si <- read.csv("../data/yeast/merged_2012_JRBP_all.csv", header = TRUE, row.names = 2)[,colnames(si) == c("Treatment","Flower.ID.Fungi.M")]
rm(si)
si <- read.csv("../data/yeast/merged_2012_JRBP_all.csv", header = TRUE, row.names = 2)[,colnames(si) == c("Treatment","Flower.ID.Fungi.M")]
si <- read.csv("../data/yeast/merged_2012_JRBP_all.csv", header = TRUE, row.names = 2)[,colnames == c("Treatment","Flower.ID.Fungi.M")]
si <- read.csv("../data/yeast/merged_2012_JRBP_all.csv", header = TRUE, row.names = 2)
si <- si[,colnames(si) == c("Treatment","Flower.ID.Fungi.M")]
si
colnames(si) <- c("sample.name", "Treatment")
rownames(si) <- paste("X", rownames(si), sep="")
si
tax_fun <- read.delim("../data/yeast/fun_cdhit_taxa_table_w_repseq.txt",sep = " ", header = TRUE, row.names=1)
tax_fun <- read.table("../data/yeast/fun_cdhit_taxa_table_w_repseq.txt", header = TRUE, row.names=1)
tax_fun <- read.table("../data/yeast/fun_cdhit_taxa_table_w_repseq.txt", header = TRUE, row.names=2)
tax_fun <- read.table("../data/yeast/fun_cdhit_taxa_table_w_repseq.txt", header = FALSE, row.names=2)
tax_fun <- read.table("../data/yeast/fun_cdhit_taxa_table_w_repseq.txt", header = FALSE, row.names=2, file = TRUE)
tax_fun <- read.table("../data/yeast/fun_cdhit_taxa_table_w_repseq.txt", header = FALSE, row.names=2, fill = TRUE)
tax_fun
tax_fun <- read.table("../data/yeast/fun_cdhit_taxa_table_w_repseq.txt", header = FALSE, row.names=2, fill = TRUE)[,-1]
tax_fun
tax_fun <- read.table("../data/yeast/fun_cdhit_taxa_table_w_repseq.txt", header = TRUE, row.names=2, fill = TRUE)[,-1]
tax_fun <- read.delim("../data/yeast/fun_cdhit_taxa_table_w_repseq.txt", sep="\t", header = TRUE, row.names=2, fill = TRUE)[,-1]
tax_fun
bacteria_phylo <- phyloseq(otu_table(as.matrix(bacteria_otus), taxa_are_rows=T), tax_table(as.matrix(tax_bac)), sample_data(si))
saveRDS(bacteria_phylo, "../data/yeast/fungal_phyloseq.RDS")
fungal_phylo <- phyloseq(otu_table(as.matrix(bacteria_otus), taxa_are_rows=T), tax_table(as.matrix(tax_bac)), sample_data(si))
fungi_otus <- read.table("../data/yeast/fun_cdhit_otu_table_wide.txt", header = TRUE, row.names = 1)
fungi_otus <- fungi_otus[,colSums(fungi_otus) >= 1000]
si <- read.csv("../data/yeast/merged_2012_JRBP_all.csv", header = TRUE, row.names = 2)
si <- si[,colnames(si) == c("Treatment","Flower.ID.Fungi.M")]
rownames(si) <- paste("X", rownames(si), sep="")
tax_fun <- read.delim("../data/yeast/fun_cdhit_taxa_table_w_repseq.txt", sep="\t", header = TRUE, row.names=2, fill = TRUE)[,-1]
fungal_phylo <- phyloseq(otu_table(as.matrix(fungal_otus), taxa_are_rows=T), tax_table(as.matrix(tax_fun)), sample_data(si))
fungal_phylo <- phyloseq(otu_table(as.matrix(fungi_otus), taxa_are_rows=T), tax_table(as.matrix(tax_fun)), sample_data(si))
fungi_phylo <- phyloseq(otu_table(as.matrix(fungi_otus), taxa_are_rows=T), tax_table(as.matrix(tax_fun)), sample_data(si))
saveRDS(fungi_phylo, "../data/yeast/fungal_phyloseq.RDS")
trt <- as.character(sample_data(fungi_phylo)$Treatment)
f_table <- cbind(trt, t(otu_table(fungi_phylo)))
write.csv(f_table, "../data/bacteria/RVbac_fcoocurr_input.csv")
write.csv(f_table, "../data/yeast/fun_fcoocurr_input.csv")
set.seed(1390)
knitr::opts_chunk$set(echo = TRUE)
bacteria_otus <- as.data.frame(as.matrix(biom_data(read_biom("../data/bacteria/otus_table_full.biom"))))
bacteria_otus <- bacteria_otus[,colSums(bacteria_otus) >= 1000]
si <- read.csv("../data/bacteria/Data_for_bacterial_OTUs.csv")[,-1]
rownames(si) <- paste("X", si$Flower, sep="")
tax_bac <- read.delim("../data/bacteria/bacteria_classified_otus",sep = " ", header = TRUE, row.names=1)
colnames(tax_bac) <- colnames(tax_bac)[-1]
tax_bac <- tax_bac[,-7]
bacteria_phylo <- phyloseq(otu_table(as.matrix(bacteria_otus), taxa_are_rows=T), tax_table(as.matrix(tax_bac)), sample_data(si))
saveRDS(bacteria_phylo, "../data/bacteria/bacteria_phyloseq.RDS")
trt <- as.character(sample_data(bacteria_phylo)$Treatment)
f_table <- cbind(trt, t(otu_table(bacteria_phylo)))
merge_phyloseq(fungi_phylo,bacteria_phylo)
set.seed(1390)
knitr::opts_chunk$set(echo = TRUE)
bacteria_otus <- read.table("../data/bacteria/bacteria_phyloseq.RDS")
yeast_otus <- readRDS("../data/yeast/fungal_phyloseq.RDS")
bacteria_otus <- read.table("../data/bacteria/bacteria_phyloseq.RDS")
yeast_otus <- readRDS("../data/yeast/fungal_phyloseq.RDS")
bacteria_phylo <- read.table("../data/bacteria/bacteria_phyloseq.RDS")
bacteria_phylo <- read.table("../data/bacteria/bacteria_phyloseq.RDS")
yeast_phylo <- readRDS("../data/yeast/fungal_phyloseq.RDS")
merged_bac_yeast <- merge_phyloseq(yeast_phylo, bacteria_phylo)
merged_bac_yeast
set.seed(1390)
knitr::opts_chunk$set(echo = TRUE)
fungi_otus <- read.table("../data/yeast/fun_cdhit_otu_table_wide.txt", header=TRUE, row.names=1)
quantile(colSums(fungi_otus))
sum(colSums(fungi_otus) < 1000)/ ncol(fungi_otus)
fungi_otus <- fungi_otus[,colSums(fungi_otus) >= 1000]
fun_si <- read.csv("../data/yeast/merged_2012_JRBP_all.csv", header = TRUE, row.names = 2)
fun_si <- read.csv("../data/bacteria/Data_for_bacterial_OTUs.csv", header = TRUE, row.names = 2)
si <- read.csv("../data/bacteria/Data_for_bacterial_OTUs.csv")[,-1]
colnames(si) <- c("Flower", "Treatment", "sample.name")
rownames(si) <- paste("X", si$Flower, sep="")
si <- si[,-1]
tax_fun <- read.delim("../data/yeast/fun_cdhit_taxa_table_w_repseq.txt", sep="\t", header = TRUE, row.names=2, fill = TRUE)[,-1]
fungi_phylo <- phyloseq(otu_table(as.matrix(fungi_otus), taxa_are_rows=T), tax_table(as.matrix(tax_fun)), sample_data(bac_si))
library(phyloseq, warn.conflicts = FALSE)
fungi_phylo <- phyloseq(otu_table(as.matrix(fungi_otus), taxa_are_rows=T), tax_table(as.matrix(tax_fun)), sample_data(bac_si))
fungi_phylo <- phyloseq(otu_table(as.matrix(fungi_otus), taxa_are_rows=T), tax_table(as.matrix(tax_fun)), sample_data(si))
fungi_phylo
saveRDS(fungi_phylo, "../data/yeast/fungal_phyloseq.RDS")
trt <- as.character(sample_data(fungi_phylo)$Treatment)
f_table <- cbind(trt, t(otu_table(fungi_phylo)))
write.csv(f_table, "../data/yeast/fun_fcoocurr_input.csv")
set.seed(1390)
knitr::opts_chunk$set(echo = TRUE)
otus <- read.table("../data/bacteria/germs_otus/bac_cdhit_otu_table_wide.txt", header=TRUE, row.names=1)
tax <- read.delim("../data/bacteria/germs_otus/bac_cdhit_taxa_table_w_repseq.txt", row.names=2)[,-c(1,2)]
si <- read.csv("../data/bacteria/Data_for_bacterial_OTUs.csv")[,-1]
colnames(si) <- c("Flower", "Treatment", "sample.name")
rownames(si) <- paste("X", si$Flower, sep="")
phylo <- phyloseq(otu_table(as.matrix(otus), taxa_are_rows=T), tax_table(as.matrix(tax)), sample_data(si))
phylo
otus <- read.table("../data/bacteria/germs_otus/bac_cdhit_otu_table_wide.txt", header=TRUE, row.names=1)
quantile(colSums(otus))
sum(colSums(otus) < 1000)/ ncol(otus)
sum(colSums(otus) < 500)/ ncol(otus)
sum(colSums(otus) < 100)/ ncol(otus)
set.seed(1390)
knitr::opts_chunk$set(echo = TRUE)
library(phyloseq, warn.conflicts = FALSE)
yeast_otus <- otu_table(readRDS("../data/yeast/fungal_phyloseq.RDS", header=TRUE))
# bacteria_otus <- read.table("../data/bacteria/germs_otus/bac_cdhit_otu_table_wide.txt", header = TRUE)
bacteria_otus <- readRDS("../data/bacteria/germs_otus/bacteria_phyloseq.rds")
yeast_otus <- otu_table(readRDS("../data/yeast/fungal_phyloseq.RDS"))
merged_otus <- merge(yeast_otus, bacteria_otus, all=TRUE)
bacteria <- readRDS("../data/bacteria/germs_otus/bacteria_phyloseq.rds")
yeast <- readRDS("../data/yeast/fungal_phyloseq.RDS")
merged_bac_yeast <- merge_phyloseq(yeast, bacteria)
merged_bac_yeast
merged_bac_yeast <- merge_taxa(yeast, bacteria)
merged_bac_yeast
yeast
merged_bac_yeast <- merge_phyloseq(yeast, bacteria)
colnames(otu_table(yeast))
colnames(otu_table(yeast)) %in% colnames(otu_table(bacteria))
colnames(otu_table(bacteria))
set.seed(1390)
knitr::opts_chunk$set(echo = TRUE)
library(phyloseq, warn.conflicts = FALSE)
otus <- read.table("../data/bacteria/germs_otus/bac_cdhit_otu_table_wide.txt", header=TRUE, row.names=1)
otus <- otus[,colSums(otus) >= 1000]
otus <- read.table("../data/bacteria/germs_otus/bac_cdhit_otu_table_wide.txt", header=TRUE, row.names=1)
quantile(colSums(otus))
otus <- otus[,colSums(otus) >= 500]
otus <- read.table("../data/bacteria/germs_otus/bac_cdhit_otu_table_wide.txt", header=TRUE, row.names=1)
colSums(otus)
sum(colSums(otus))
quantile(colSums(otus))
library(phyloseq, warn.conflicts = FALSE)
otus <- read.table("../data/bacteria/germs_otus/bac_cdhit_otu_table_wide_97.txt.txt", header=TRUE, row.names=1)
otus <- read.table("../data/bacteria/germs_otus/bac_cdhit_otu_table_wide_97.txt", header=TRUE, row.names=1)
quantile(colSums(otus))
sum(colSums(otus))
otus <- otus[,colSums(otus) >= 200]
tax <- read.delim("../data/bacteria/germs_otus/bac_cdhit_taxa_table_w_repseq.txt", row.names=2)[,-c(1,2)]
tax <- read.delim("../data/bacteria/germs_otus/bac_cdhit_taxa_table_w_repseq_97.txt", row.names=2)[,-c(1,2)]
si <- read.csv("../data/bacteria/Data_for_bacterial_OTUs.csv")[,-1]
colnames(si) <- c("Flower", "Treatment", "sample.name")
rownames(si) <- paste("X", si$Flower, sep="")
phylo <- phyloseq(otu_table(as.matrix(otus), taxa_are_rows=T), tax_table(as.matrix(tax)), sample_data(si))
phylo
# rarefied_phylo <- rarefy_even_depth(phylo, sample.size = 500)
saveRDS(rarefied_phylo,"../data/bacteria/germs_otus/bacteria_phyloseq.rds")
# phylo <- rarefy_even_depth(phylo, sample.size = 500)
saveRDS(phylo,"../data/bacteria/germs_otus/bacteria_phyloseq.rds")
trt <- as.character(sample_data(rarefied_phylo)$Treatment)
trt <- as.character(sample_data(phylo)$Treatment)
f_table <- cbind(trt, t(otu_table(phylo)))
write.csv(f_table, "../data/bacteria/germs_otus/bac_fcoocurr_input.csv")
fungi_otus <- read.table("../data/yeast/fungi_cdhit_otu_table_wide_97.txt", header=TRUE, row.names=1)
quantile(colSums(fungi_otus))
fungi_otus <- fungi_otus[,colSums(fungi_otus) >= 500]
si <- read.csv("../data/bacteria/Data_for_bacterial_OTUs.csv")[,-1]
colnames(si) <- c("Flower", "Treatment", "sample.name")
rownames(si) <- paste("X", si$Flower, sep="")
si <- si[,-1]
tax_fun <- read.delim("../data/yeast/fungi_cdhit_taxa_table_w_repseq_97.txt", sep="\t", header = TRUE, row.names=2, fill = TRUE)[,-1]
fungi_phylo <- phyloseq(otu_table(as.matrix(fungi_otus), taxa_are_rows=T), tax_table(as.matrix(tax_fun)), sample_data(si))
saveRDS(fungi_phylo, "../data/yeast/fungal_phyloseq.RDS")
trt <- as.character(sample_data(fungi_phylo)$Treatment)
f_table <- cbind(trt, t(otu_table(fungi_phylo)))
write.csv(f_table, "../data/yeast/fun_fcoocurr_input.csv")
tax
tax %in% c("Cyanobacteria","Chloroplast"))
tax %in% c("Cyanobacteria","Chloroplast")
tax[,2] %in% c("Cyanobacteria","Chloroplast")
tax[,3] %in% c("Cyanobacteria","Chloroplast")
tax
taX[6,]
tax[6,]
tax[6,1] %in% c("Cyanobacteria","Chloroplast")
c("Cyanobacteria","Chloroplast") %in% tax[6,3]
c("Cyanobacteria","Chloroplast") %in% tax[6,1]
tax[6,]
tax$[,1:2]
tax[,1:2]
otus <- read.table("../data/bacteria/germs_otus/bac_cdhit_otu_table_wide_97.txt", header=TRUE, row.names=1)
tax <- read.delim("../data/bacteria/germs_otus/bac_cdhit_taxa_table_w_repseq_97.txt", row.names=2)[,-c(1,2)]
tax[6,]
tax[,2]
si <- read.csv("../data/bacteria/Data_for_bacterial_OTUs.csv")[,-1]
colnames(si) <- c("Flower", "Treatment", "sample.name")
rownames(si) <- paste("X", si$Flower, sep="")
otus <- otus[,colSums(otus) >= 200]
tax[,2] %in% c("Cyanobacteria","Chloroplast"
)
?prune_taxa
phylo <- phyloseq(otu_table(as.matrix(otus), taxa_are_rows=T), tax_table(as.matrix(tax)), sample_data(si))
prune_taxa(phylo, Order=="Chloroplast")
head(tax)
prune_taxa(phylo, class=="Chloroplast")
filter_taxa(phylo, "Chloroplast")
filter_taxa(phylo, "class==Chloroplast")
?subset_taxa
subset_taxa(phylo, class != "Chloroplast")
phylo
remove <- c("Cyanobacteria","Chloroplast")
remove
subset_taxa(phylo, class != remove)
subset_taxa(phylo, !(class %in% remove))
phylo <- phyloseq(otu_table(as.matrix(otus), taxa_are_rows=T), tax_table(as.matrix(tax)), sample_data(si))
phylo <- subset_taxa(phylo, class != "rCyanobacteria")
phylo <- subset_taxa(phylo, class != "Chloroplast")
phylo
# phylo <- rarefy_even_depth(phylo, sample.size = 500)
saveRDS(phylo,"../data/bacteria/germs_otus/bacteria_phyloseq.rds")
trt <- as.character(sample_data(phylo)$Treatment)
f_table <- cbind(trt, t(otu_table(phylo)))
write.csv(f_table, "../data/bacteria/germs_otus/bac_fcoocurr_input.csv")
knitr::opts_chunk$set(echo = TRUE)
library(data.table, warn.conflicts = FALSE)
library(igraph, warn.conflicts = FALSE)
library(phyloseq, warn.conflicts = FALSE)
taxa <- tax_table(phylo)
phylo <- readRDS("data/bacteria/germs_otus/bacteria_phyloseq.rds")
taxa <- tax_table(phylo)
head(taxa)
cooccurrence_data <- data.table(read.table("data/bacteria/germs_otus/bacteria_cooccurrence",
col.names = c("treatment", "OTU_1", "OTU_2", "rho", "p")))
obj <- readRDS("~/Dropbox/jrbp.community.analysis/data/rare_b.rds")
obj
tax_table(obj)
tax_table(obj)["OTU_5"]
otu_table(obj)["OTU_5"]
phylo.data <- readRDS("data/bacteria/bacteria_phyloseq.rds")
otu_table(phylo.data)["OTU_5"]
obj
set.seed(1390)
knitr::opts_chunk$set(echo = TRUE)
library(phyloseq, warn.conflicts = FALSE)
library(phyloseq, warn.conflicts = FALSE)
library(biomformat, warn.conflicts = FALSE)
pdata <- readRDS("~/Dropbox/jrbp.community.analysis/rare_b.rds")
phyloseq_obj <- pdata
require(phyloseq)
otus <- otu_table(phyloseq_obj)
otus
quantile(otus)
otus[otus != 0] <- 1
otus
frequency = 0.4
ncol(otus)*frequency
rowSums(otus) > ncol(otus)*frequency
rowSums(otus)
rowSums(otus) > ncol(otus)*frequency
sum(rowSums(otus) > ncol(otus)*frequency)
frequency = 0.3
sum(rowSums(otus) > ncol(otus)*frequency)
frequency = 0.2
sum(rowSums(otus) > ncol(otus)*frequency)
sum(rowSums(otus) > ncol(otus)*0.2)
sum(rowSums(otus) > ncol(otus)*0.1)
sum(rowSums(otus) > ncol(otus)*0.01)
sum(rowSums(otus) > ncol(otus)*0.001)
sum(rowSums(otus) > ncol(otus)*0.05)
sample_data(pdata)[sum(rowSums(otus) > ncol(otus)*0.2)]
tax_table(pdata)[sum(rowSums(otus) > ncol(otus)*0.2)]
tax_table(pdata)
tax_table(pdata)[sum(rowSums(otus) > ncol(otus)*0.2),]
tax_table(pdata)[,sum(rowSums(otus) > ncol(otus)*0.2)]
tax_table(pdata)[sum(rowSums(otus) > ncol(otus)*0.2),]
sum(rowSums(otus) > ncol(otus)*0.2)
tax_table(pdata)[rowSums(otus) > ncol(otus)*0.2]
otus <- otu_table(phyloseq_obj)
otus[otus != 0] <- 1
cutoff <- ncol(otus)*frequency
otus
otus[1,]
otus[1,] == 0
sum(otus[1,] != 0)
prune_taxa(phyloseq_obj, function(x){sum(x != 0) > cutoff}, TRUE)
prune_taxa(phyloseq_obj, function(x)sum(x != 0) > cutoff, TRUE)
prune_taxa(phyloseq_obj, function(x){sum(x != 0) > cutoff})
prune_taxa(phyloseq_obj, function(x){sum(x != 0) > cutoff})
filter_taxa(phyloseq_obj, function(x){sum(x != 0) > cutoff})
filter_taxa(phyloseq_obj, function(x){sum(x != 0) > cutoff}, TRUE)
cutoff <- ncol(otu_table(phyloseq_obj)) * frequency
frequency = 0.2
cutoff <- ncol(otu_table(phyloseq_obj)) * frequency
cutoff <- ncol(otu_table(phyloseq_obj)) * 0.5
cutoff <- ncol(otu_table(phyloseq_obj)) * frequency
filter_taxa(phyloseq_obj, function(x){sum(x != 0) > cutoff}, TRUE)
find_generalists <- function(phyloseq_obj, frequency = 0.2){
require(phyloseq)
cutoff <- ncol(otu_table(phyloseq_obj)) * frequency
filter_taxa(phyloseq_obj, function(x){sum(x != 0) > cutoff}, TRUE)
}
find_generalists(pdata, 0.3)
phylo <- readRDS("../rare_b.rds")
find_generalists <- function(phyloseq_obj, frequency = 0.2){
require(phyloseq)
cutoff <- ncol(otu_table(phyloseq_obj)) * frequency
filter_taxa(phyloseq_obj, function(x){sum(x != 0) > cutoff}, TRUE)
}
find_generalists(phylo, 0.2)
phylo <- find_generalists(phylo, 0.2)
trt <- as.character(sample_data(phylo)$Treatment)
f_table <- cbind(trt, t(otu_table(phylo)))
write.csv(f_table, "../data/bacteria/bac_fcoocurr_input.csv")
otu_table(phylo)
rownames(otu_table(phylo))
sort(rownames(otu_table(phylo)))
phylo <- readRDS("../rare_b.rds")
find_generalists(phylo, 0.2)
find_generalists(phylo, 0.05)
find_generalists(phylo, 0.20)
library(e1071)
library(rpart)
library(phyloseq)
phylo_obj <- readRDS("nashua.column.raw.otu.taxa.RDS")
setwd("Desktop/16S_amplicon_pipeline/")
